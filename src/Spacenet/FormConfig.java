/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Spacenet;

import Configuracao.SpacenetConfig;
import java.io.File;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTextField;

/**
 *
 * @author marco.junior
 */
public class FormConfig extends javax.swing.JFrame {

    /**
     * Creates new form FormConfig
     */
    public FormConfig() throws SAXException, IOException {
        initComponents();
        Teste.setVisible(false);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        leiaXml();
        licenca();
        jComboBox.setEnabled(false);
        jtInstancia.setEnabled(false);
        botaoConfigCancelar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanelConfig = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtInstancia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jBuscaDB = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLocalXml = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jGerarArquivo = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jAbrirArquivo = new javax.swing.JButton();
        jComboBox = new javax.swing.JComboBox<>();
        jDiretorioBanco = new javax.swing.JTextField();
        jSpacenetConfig = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jNomeEmpreendimento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Teste = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONFIGURAÇÃO");
        setFocusable(false);
        setIconImage(new ImageIcon(getClass().getResource("/imagem/manutencao.png")).getImage());
        setResizable(false);

        jPanelConfig.setBackground(new java.awt.Color(255, 255, 255));
        jPanelConfig.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelConfig.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Instância do Banco de Dados");
        jPanelConfig.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        jtInstancia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtInstancia.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtInstancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtInstanciaActionPerformed(evt);
            }
        });
        jPanelConfig.add(jtInstancia, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 180, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Banco de Dados");
        jPanelConfig.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Selecionar o Banco de Dados");
        jPanelConfig.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));
        jPanelConfig.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 400, 10));
        jPanelConfig.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 400, 10));
        jPanelConfig.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 400, 9));
        jPanelConfig.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 400, -1));

        jBuscaDB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jBuscaDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/bucarmini.png"))); // NOI18N
        jBuscaDB.setText("  Buscar");
        jBuscaDB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBuscaDB.setFocusPainted(false);
        jBuscaDB.setFocusable(false);
        jBuscaDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscaDBActionPerformed(evt);
            }
        });
        jPanelConfig.add(jBuscaDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 140, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Diretorio do SpacenetConfig");
        jPanelConfig.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/save.png"))); // NOI18N
        jButton2.setText(" Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanelConfig.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, -1, 40));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Configuração");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanelConfig.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 120, 30));

        jLabel5.setDisplayedMnemonic('C');
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Diretório do XML");
        jPanelConfig.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLocalXml.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLocalXml.setText("C:\\RBACKUP\\CONFIGBACKUP.XML");
        jLocalXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLocalXmlActionPerformed(evt);
            }
        });
        jPanelConfig.add(jLocalXml, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 240, -1));
        jPanelConfig.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 400, 10));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Diretório do database");
        jPanelConfig.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 170, -1));

        jGerarArquivo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jGerarArquivo.setText("Gerar Arquivo");
        jGerarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGerarArquivoActionPerformed(evt);
            }
        });
        jPanelConfig.add(jGerarArquivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, -1, -1));

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanelConfig.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 90, 30));
        jPanelConfig.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 400, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Criar Arquivo de Parametrização do SpacenetConfig.txt");
        jPanelConfig.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        jAbrirArquivo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jAbrirArquivo.setText("Abrir Arquivo");
        jAbrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbrirArquivoActionPerformed(evt);
            }
        });
        jPanelConfig.add(jAbrirArquivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, -1, -1));

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jPanelConfig.add(jComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 180, 30));

        jDiretorioBanco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jDiretorioBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDiretorioBancoActionPerformed(evt);
            }
        });
        jPanelConfig.add(jDiretorioBanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 220, -1));

        jSpacenetConfig.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jSpacenetConfig.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jPanelConfig.add(jSpacenetConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 180, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Configuração de Diretórios");
        jPanelConfig.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jNomeEmpreendimento.setEditable(false);
        jNomeEmpreendimento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jNomeEmpreendimento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanelConfig.add(jNomeEmpreendimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 412, 360, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("NOME DO EMPREENDIMENTO - LICENÇA");
        jPanelConfig.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        Teste.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Teste.setForeground(new java.awt.Color(255, 0, 0));
        Teste.setText("C a r r e g a n d o . . . . . . . . . . . . . . . . .");
        jPanelConfig.add(Teste, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 290, -1));

        jMenu1.setText("Opções");

        jMenuItem1.setText("Voltar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
      
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        try {
            Teste.setVisible(true);
            FormBD tela;
            tela = new FormBD();
            tela.setVisible(true);
            this.setVisible(false);
        } catch (SAXException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jAbrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAbrirArquivoActionPerformed
        try {
            String aplicativo = jSpacenetConfig.getText()+"\\Spacenetconfig.txt";         
            ProcessBuilder P = new ProcessBuilder();
            P.command("cmd.exe","/c",aplicativo);
            JOptionPane.showMessageDialog(null,"Após as alterações é necessário clicar em Salvar");
            P.start();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Arquivo não encontrado: "+ex.getMessage());
        }
    }//GEN-LAST:event_jAbrirArquivoActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        botaoConfigCancelar();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jGerarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGerarArquivoActionPerformed
        try {
            String SAC = "SAC";
            SpacenetConfig config = new SpacenetConfig();
            File SpacenetTxt = new File(jSpacenetConfig.getText());
            SpacenetConfig teste = new SpacenetConfig();
            
            if(!SpacenetTxt.exists())
            {
                JOptionPane.showMessageDialog(null,"Diretório inválido : " + config);
            }
            
            else
            teste.SpacenetConfig(jSpacenetConfig.getText()); 
            config.Configuracao((String)jComboBox.getSelectedItem(),jtInstancia.getText(),SAC, jtInstancia.getText(),jSpacenetConfig.getText());
            
        } catch (IOException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jGerarArquivoActionPerformed

    private void jLocalXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLocalXmlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLocalXmlActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

      JLabel label = new JLabel("Digite a senha:");
      JPasswordField jpf = new JPasswordField();
      JOptionPane.showConfirmDialog(null,new Object[]{label, jpf}, "Password:",JOptionPane.OK_CANCEL_OPTION); 
      String senha = "spnsw";
       if(senha.equals(jpf.getText().toString()))
       {
        botaoConfigurar();
       }else  
            JOptionPane.showMessageDialog(null,"Senha incorreta","Senha"
            ,JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             try {
                
                SpacenetConfig config = new SpacenetConfig();
                String SAC = "SAC";
                File SpacenetTxt = new File(jSpacenetConfig.getText()+"\\SPACENETCONFIG.TXT");  
                if("".equals(jtInstancia.getText()) || " ".equals((String)jComboBox.getSelectedItem()))
                {
                JOptionPane.showMessageDialog(null,"SELECIONAR O BANCO DE DADOS OU INSTÂNCIA DO BANCO ","ERRO CONFIGURAÇÃO",JOptionPane.INFORMATION_MESSAGE);
                }
                else if(!SpacenetTxt.exists())
                {
                JOptionPane.showMessageDialog(null,"Arquivo de parametros : " + SpacenetTxt +"\nArquivo SpacenetConfig.txt foi gerado");
                }
                else
                {
                configuracaoBotaoSalvar();
                config.Configuracao((String)jComboBox.getSelectedItem(),jtInstancia.getText(),SAC, jtInstancia.getText(),jSpacenetConfig.getText());
                jtInstancia.setEnabled(false);
                jComboBox.setEnabled(false);
                jDiretorioBanco.setEnabled(false);
                jSpacenetConfig.setEnabled(false);
                Teste.setVisible(true);
                //JOptionPane.showMessageDialog(null, "NEPOS BACKUP GUARDANDO INFORMAÇÕES ","NEPOS BACKUP ",JOptionPane.INFORMATION_MESSAGE);
                FormBD tela1 = new FormBD();
                tela1.setVisible(true);
                this.dispose();
                }
            } catch (IOException ex) {
                Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBuscaDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscaDBActionPerformed
        jComboBox.setEnabled(true);
//        JOptionPane.showMessageDialog(null,"Depois de selecionar o Banco é necessario clicar no botão << SALVAR >>");
        String diretorio = jDiretorioBanco.getText();
        String Spacenet = "mdf";
        File file = new File(diretorio);
        File afile[] = file.listFiles();
        int i = 0;
        for (int j = afile.length; i < j; i++) {
            File arquivos = afile[i];
            if(arquivos.getName().endsWith(Spacenet) && !arquivos.getName().startsWith("SAC"))
            {
            jComboBox.addItem(arquivos.getName().replace(".mdf",""));
            }
            System.out.println(arquivos.getName());
        }   
        jBuscaDB.setEnabled(false);
    }//GEN-LAST:event_jBuscaDBActionPerformed

    private void jtInstanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtInstanciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtInstanciaActionPerformed

    private void jDiretorioBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDiretorioBancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDiretorioBancoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormConfig().setVisible(true);
                } catch (SAXException ex) {
                    Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Teste;
    private javax.swing.JButton jAbrirArquivo;
    private javax.swing.JButton jBuscaDB;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JTextField jDiretorioBanco;
    private javax.swing.JButton jGerarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    public javax.swing.JTextField jLocalXml;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    public javax.swing.JTextField jNomeEmpreendimento;
    private javax.swing.JPanel jPanelConfig;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    public javax.swing.JTextField jSpacenetConfig;
    private javax.swing.JTextField jtInstancia;
    // End of variables declaration//GEN-END:variables

public void botaoConfigCancelar()
{
    jLocalXml.setEnabled(false);
//    jTabelaXml.setEnabled(false);
    jDiretorioBanco.setEnabled(false);
    jGerarArquivo.setEnabled(false);
    jtInstancia.setEnabled(false);
    jAbrirArquivo.setEnabled(false);
    jSpacenetConfig.setEnabled(false);
    jBuscaDB.setEnabled(true);
    jComboBox.setEnabled(false);
}
public void botaoConfigurar()
{
    jLocalXml.setEnabled(true);
  //  jTabelaXml.setEnabled(true);
    jDiretorioBanco.setEnabled(true);
    jGerarArquivo.setEnabled(true);
    jtInstancia.setEnabled(true);
    jAbrirArquivo.setEnabled(true);
    jSpacenetConfig.setEnabled(true);  
}
public void configuracaoBotaoSalvar()
{
    try
    {
    DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();
    DocumentBuilder documentBuilder = document.newDocumentBuilder();
    org.w3c.dom.Document documentoXML = documentBuilder.newDocument();
    Element root = documentoXML.createElement("root");
    documentoXML.appendChild(root);
    Element Configuracao = documentoXML.createElement("Configuracao");
    
    Attr id = documentoXML.createAttribute("ID");
        id.setValue("1");
        Configuracao.setAttributeNode(id);
        root.appendChild(Configuracao);
        
    Element Local = documentoXML.createElement("Local");
    Local.appendChild(documentoXML.createTextNode((jtInstancia.getText())));
    Configuracao.appendChild(Local);    
            
    Element Banco = documentoXML.createElement("Banco");
    Banco.appendChild(documentoXML.createTextNode((String)jComboBox.getSelectedItem()));
    Configuracao.appendChild(Banco);
    
    Element Diretorio = documentoXML.createElement("Diretorio");
    Diretorio.appendChild(documentoXML.createTextNode(jLocalXml.getText()));
    Configuracao.appendChild(Diretorio);
    
    Element Path = documentoXML.createElement("Path");
    Path.appendChild(documentoXML.createTextNode(jDiretorioBanco.getText()));
    Configuracao.appendChild(Path);
    
    Element Config = documentoXML.createElement("Config");
    Config.appendChild(documentoXML.createTextNode(jSpacenetConfig.getText()));
    Configuracao.appendChild(Config);
    TransformerFactory transformerfactory = TransformerFactory.newInstance();
    Transformer transformer = transformerfactory.newTransformer();
    DOMSource documentoFonte = new DOMSource(documentoXML);
    StreamResult documentoFinal = new StreamResult(new File(jLocalXml.getText()));
    transformer.transform(documentoFonte, documentoFinal);
    }
           catch (ParserConfigurationException ex) {
            Logger.getLogger(FormBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(FormBD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(FormBD.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
}

public void leiaXml() throws SAXException, IOException
{
     try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(jLocalXml.getText());
            NodeList listaDiretorio = doc.getElementsByTagName("Configuracao");
            int tamanholista = listaDiretorio.getLength();
            
            for (int i=0; i < tamanholista ; i++)
            {
                Node diretorio = listaDiretorio.item(i);   
                if(diretorio.getNodeType() == Node.ELEMENT_NODE)
                {
                    Element elementoDiretorio = (Element) diretorio;
                    String ID = elementoDiretorio.getAttribute("ID");
                    System.out.println("Elemento ID" + ID);
                    NodeList listaDiretorioFilho = elementoDiretorio.getChildNodes();
                
                    int tamanhoListaFilho = listaDiretorioFilho.getLength();    
                    for(int j = 0 ; j < tamanhoListaFilho ; j ++)
                    {
                        Node diretorioFilho =listaDiretorioFilho.item(j);
                        if(diretorioFilho.getNodeType() == Node.ELEMENT_NODE)
                        {
                            Element elementoDiretorioFilho = (Element) diretorioFilho;
                            switch(elementoDiretorioFilho.getTagName())
                            {
                                case "Local" :
                                    System.out.println("local" +elementoDiretorioFilho.getTextContent());
                                    jtInstancia.setText(elementoDiretorioFilho.getTextContent());
                                    break;
                                case "Banco" :
                                    System.out.println("Banco" +elementoDiretorioFilho.getTextContent());
                                    jComboBox.addItem(elementoDiretorioFilho.getTextContent());
                                    break;
                                    
                                case "Diretorio":
                                    System.out.println("Diretorio" +elementoDiretorioFilho.getTextContent());
                                    jLocalXml.setText(elementoDiretorioFilho.getTextContent());

                                case "Path":
                                    System.out.println("Path" +elementoDiretorioFilho.getTextContent());
                                    jDiretorioBanco.setText(elementoDiretorioFilho.getTextContent());
                                    
                                case "Config":
                                    System.out.println("Config" +elementoDiretorioFilho.getTextContent());
                                    jSpacenetConfig.setText(elementoDiretorioFilho.getTextContent()); 
                            }       
                        }
                    }
                }
            }
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

public void licenca() throws SAXException, IOException
{
    String local = jSpacenetConfig.getText()+"\\LICENCA.XML";
    
    File localLicencaArquivo = new File(local);
    String pastaeXml = "C:\\RBACKUP\\CONFIGBACKUP.XML";
    File diretorioXml = new File(pastaeXml);
    
    if(!diretorioXml.exists())
    {
     JOptionPane.showMessageDialog(null,"NÃO FOI POSSÍVEL REALIZAR A LEITURA DO CONFIGBACKUP.XML \n"
                 + "VERIFICAR O DIRETÓRIO");
     System.exit(0);
    }
    if(!localLicencaArquivo.exists())
    {
    JOptionPane.showMessageDialog(null,"NECESSÁRIO LICENÇA PARA UTILIZAÇÃO DO SOFTWARE","NEPOS INFORMA",JOptionPane.INFORMATION_MESSAGE);
    System.exit(0);
    }
    else
    {
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();           
            Document doc = builder.parse(local);
            NodeList listaDiretorio = doc.getElementsByTagName("LICENCA");
            int tamanholista = listaDiretorio.getLength();
            for (int i=0; i < tamanholista ; i++)
            {
                Node diretorio = listaDiretorio.item(i);   
                if(diretorio.getNodeType() == Node.ELEMENT_NODE)
                {
                    Element elementoDiretorio = (Element) diretorio;
                    String ID = elementoDiretorio.getAttribute("ID");
                    NodeList listaDiretorioFilho = elementoDiretorio.getChildNodes();
                    int tamanhoListaFilho = listaDiretorioFilho.getLength();
                    
                    for(int j = 0 ; j < tamanhoListaFilho ; j ++)
                    {
                        Node diretorioFilho =listaDiretorioFilho.item(j);
                        if(diretorioFilho.getNodeType() == Node.ELEMENT_NODE)
                        {
                            Element elementoDiretorioFilho = (Element) diretorioFilho;
                            switch(elementoDiretorioFilho.getTagName())
                            {           
                                case "EMPREENDIMENTO" :
                                    System.out.println("EMPREENDIMENTO" );
                                    jNomeEmpreendimento.setText(elementoDiretorioFilho.getTextContent());
                                    break;                              
                            }         
                        }
                    }
                }
            }   
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormConfig.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    
    }
} 







